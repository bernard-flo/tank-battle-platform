function name() { return "Alpha Tanker"; }
function type() { return Type.TANKER; }
function update(tank, enemies, allies, bulletInfo) {
  function relAngle(ax, ay, bx, by) { return Math.atan2(by - ay, bx - ax) * 180 / Math.PI; }
  function clamp(x, a, b) { return Math.max(a, Math.min(b, x)); }
  function rel(a) { return a / 900; }
  function nn(x) {
    var W1 = [
      [ 0.9, 0.6, -0.2, 0.4, 0.3, -0.5, 0.2, 0.1, -0.3, 0.5, -0.1, 0.7 ],
      [ -0.3, 0.8, 0.5, -0.4, 0.2, 0.6, -0.7, 0.3, 0.4, -0.5, 0.1, -0.2 ],
      [ 0.5, -0.7, 0.9, 0.3, -0.4, 0.2, 0.6, -0.1, 0.8, -0.3, 0.7, -0.6 ],
      [ -0.6, 0.2, 0.4, 0.7, -0.5, 0.9, 0.3, -0.2, 0.1, 0.6, -0.8, 0.5 ],
      [ 0.7, 0.1, -0.6, 0.5, 0.8, -0.3, 0.2, 0.9, -0.4, 0.6, 0.3, -0.7 ],
      [ 0.4, -0.5, 0.3, 0.1, -0.2, 0.7, 0.8, -0.6, 0.5, -0.1, 0.2, 0.9 ],
      [ -0.2, 0.3, -0.5, 0.8, 0.6, -0.7, 0.1, 0.4, -0.8, 0.7, -0.1, 0.6 ],
      [ 0.6, -0.1, 0.7, -0.3, 0.9, 0.5, -0.4, 0.2, 0.8, -0.6, 0.4, -0.2 ]
    ];
    var b1 = [0.1, -0.05, 0.2, -0.1, 0.05, 0.1, -0.05, 0.1];
    var W2 = [
      [ 0.7, -0.3, 0.6, 0.4, -0.5, 0.3, 0.2, -0.1 ],
      [ -0.6, 0.5, -0.4, 0.7, 0.3, -0.2, 0.6, 0.4 ],
      [ 0.5, 0.4, -0.3, 0.6, -0.7, 0.8, -0.2, 0.1 ]
    ];
    var b2 = [0.0, 0.0, -0.1];
    var h = new Array(8);
    for (var i=0;i<8;i++){ var s=b1[i]; for (var j=0;j<12;j++) s += W1[i][j]*x[j]; h[i]=Math.max(0,s);} 
    var o = new Array(3);
    for (var k=0;k<3;k++){ var s=b2[k]; for (var i2=0;i2<8;i2++) s += W2[k][i2]*h[i2]; o[k]=s; }
    return o;
  }
  var ex = 0, ey = 0, ed = 1e9, eang = 0; 
  if (enemies.length>0){
    var n = enemies[0]; ed = n.distance; ex = n.x; ey = n.y; eang = n.angle;
    for (var i=1;i<enemies.length;i++){ var e=enemies[i]; if (e.distance<ed){ed=e.distance; ex=e.x; ey=e.y; eang = Math.atan2(e.y-tank.y,e.x-tank.x)*180/Math.PI;}}
  }
  var ax=0, ay=0, ad=1e9; if (allies.length>0){ var a0=allies[0]; ad=a0.distance; ax=a0.x; ay=a0.y; for (var i=1;i<allies.length;i++){ var a=allies[i]; if (a.distance<ad){ad=a.distance; ax=a.x; ay=a.y;}}}
  var bx=0, by=0, bd=1e9, bvx=0, bvy=0; if (bulletInfo.length>0){ var b0=bulletInfo[0]; bd=b0.distance; bx=b0.x; by=b0.y; bvx=b0.vx; bvy=b0.vy; for (var i=1;i<bulletInfo.length;i++){ var b=bulletInfo[i]; if (b.distance<bd){bd=b.distance; bx=b.x; by=b.y; bvx=b.vx; bvy=b.vy;}}}
  var feat = [
    rel(tank.x), rel(tank.y), clamp(tank.health/150,0,1), clamp(tank.energy/200,0,1),
    clamp(ed/900,0,1), Math.sin(eang*Math.PI/180), Math.cos(eang*Math.PI/180),
    clamp(ad/900,0,1), clamp(bd/900,0,1), clamp(bvx/10,-1,1), clamp(bvy/10,-1,1), Math.random()*0.1
  ];
  var out = nn(feat);
  var moveDir = ((out[0])%1)*360; if (moveDir<0) moveDir+=360;
  var fireDir = ((out[1])%1)*360; if (fireDir<0) fireDir+=360;
  var fireBias = 0.4 + 0.3*(1-clamp(ed/900,0,1));
  if (Math.tanh(out[2])>0.2 || Math.random()<fireBias) { tank.fire(fireDir); }
  if (!tank.move(moveDir)) { tank.move(relAngle(tank.x,tank.y,ex,ey)+180); }
}

// ===== 다음 로봇 =====

function name() { return "Bravo Dealer"; }
function type() { return Type.DEALER; }
function update(tank, enemies, allies, bulletInfo) {
  function clamp(x,a,b){return Math.max(a,Math.min(b,x));}
  function relAngle(ax, ay, bx, by) { return Math.atan2(by - ay, bx - ax) * 180 / Math.PI; }
  function nn(x){
    var W1=[[0.3,0.6,-0.7,0.4,0.5,-0.2,0.1,0.2,0.3,0.4,-0.5,0.2],[0.5,-0.4,0.8,0.6,-0.3,0.7,-0.1,0.3,0.2,-0.6,0.4,0.1],[0.7,0.1,0.2,-0.5,0.6,0.8,-0.2,0.5,-0.4,0.3,0.6,-0.7],[0.4,0.2,-0.1,0.7,-0.6,0.5,0.8,-0.3,0.6,-0.2,0.1,0.4],[0.2,0.7,0.5,-0.4,0.6,-0.3,0.7,0.8,-0.2,0.1,0.3,-0.5],[0.6,-0.2,0.4,0.1,0.3,0.7,-0.4,0.2,0.5,0.8,-0.6,0.1],[0.5,0.3,-0.6,0.7,-0.2,0.4,0.6,-0.5,0.3,0.1,0.2,0.8],[0.1,0.4,0.6,-0.3,0.5,0.2,0.7,0.8,-0.6,0.3,0.2,0.5]];
    var b1=[0.0,0.1,-0.05,0.05,0.0,0.1,0.0,0.05];
    var W2=[[0.6,0.3,0.2,0.5,-0.3,0.4,0.6,0.2],[-0.5,0.7,0.4,0.6,0.3,0.2,-0.1,0.8],[0.3,0.4,0.7,-0.2,0.5,0.6,0.2,-0.1]]; var b2=[0.0,0.0,0.0];
    var h=new Array(8),o=new Array(3); for(var i=0;i<8;i++){var s=b1[i]; for(var j=0;j<12;j++) s+=W1[i][j]*x[j]; h[i]=Math.max(0,s);} for(var k=0;k<3;k++){var s2=b2[k]; for(var i2=0;i2<8;i2++) s2+=W2[k][i2]*h[i2]; o[k]=s2;} return o;
  }
  var ex=0,ey=0,ed=1e9,eang=0; if(enemies.length){var ne=enemies[0];ed=ne.distance;ex=ne.x;ey=ne.y;eang=ne.angle;for(var i=1;i<enemies.length;i++){var e=enemies[i];if(e.distance<ed){ed=e.distance;ex=e.x;ey=e.y;eang=Math.atan2(e.y-tank.y,e.x-tank.x)*180/Math.PI;}}}
  var clusterX=0, clusterY=0; for(var i=0;i<enemies.length;i++){clusterX+=enemies[i].x;clusterY+=enemies[i].y;} if(enemies.length){clusterX/=enemies.length; clusterY/=enemies.length;}
  var bd=1e9,bvx=0,bvy=0; if (bulletInfo.length){var b=bulletInfo[0]; bd=b.distance;bvx=b.vx;bvy=b.vy; for(var i=1;i<bulletInfo.length;i++){var t=bulletInfo[i]; if(t.distance<bd){bd=t.distance;bvx=t.vx;bvy=t.vy;}}}
  var feat=[tank.x/900,tank.y/600,clamp(tank.health/120,0,1),clamp(tank.energy/180,0,1),clamp(ed/900,0,1),Math.sin(eang*Math.PI/180),Math.cos(eang*Math.PI/180),clamp(bd/900,0,1),clamp(bvx/12,-1,1),clamp(bvy/12,-1,1), (clusterX-450)/450,(clusterY-300)/300];
  var o=nn(feat); var fireDir=((o[1])%1)*360; if(fireDir<0)fireDir+=360; var moveAway=relAngle(ex,ey,tank.x,tank.y); var mix=0.6; var moveDir = mix*moveAway + (1-mix)*((o[0]%1)*360); if(!tank.move(moveDir)) tank.move(moveAway);
  var shouldFire = Math.tanh(o[2])> -0.2 || ed<350; if(shouldFire) tank.fire(fireDir);
}

// ===== 다음 로봇 =====

function name() { return "Charlie Normal"; }
function type() { return Type.NORMAL; }
function update(tank, enemies, allies, bulletInfo) {
  function clamp(x,a,b){return Math.max(a,Math.min(b,x));}
  function nn(x){
    var W1=[[0.2,0.1,0.5,0.6,-0.2,0.4,0.7,-0.1,0.3,0.2,0.1,0.4],[0.6,0.5,-0.2,0.1,0.7,-0.3,0.2,0.8,0.4,-0.5,0.3,0.6],[0.3,0.7,0.1,0.2,0.6,0.5,-0.4,0.3,0.8,-0.2,0.7,0.5],[0.5,0.2,0.6,-0.1,0.4,0.7,0.3,0.5,0.2,0.6,-0.3,0.1],[0.4,0.3,0.2,0.7,0.6,-0.1,0.5,0.8,0.3,0.2,0.6,-0.4],[0.7,0.6,0.5,0.4,0.3,0.2,0.1,-0.2,0.5,0.6,0.7,0.8],[0.2,0.4,0.6,0.8,0.1,0.3,0.5,0.7,0.9,-0.1,0.2,0.4],[0.1,0.3,0.5,0.7,0.2,0.4,0.6,0.8,0.3,0.5,0.7,-0.2]]; var b1=[0,0,0,0,0,0,0,0];
    var W2=[[0.5,0.4,0.3,0.2,0.1,0.6,0.7,0.8],[0.4,0.5,0.6,0.7,0.8,0.1,0.2,0.3],[0.3,0.2,0.1,0.6,0.5,0.4,0.7,0.8]]; var b2=[0,0,0];
    var h=new Array(8),o=new Array(3); for(var i=0;i<8;i++){var s=b1[i]; for(var j=0;j<12;j++) s+=W1[i][j]*x[j]; h[i]=Math.max(0,s);} for(var k=0;k<3;k++){var s2=b2[k]; for(var i2=0;i2<8;i2++) s2+=W2[k][i2]*h[i2]; o[k]=s2;} return o;
  }
  var ex=0,ey=0,ed=1e9; var eang=0; if(enemies.length){var ne=enemies[0];ed=ne.distance;ex=ne.x;ey=ne.y;eang=ne.angle; for(var i=1;i<enemies.length;i++){var e=enemies[i];if(e.distance<ed){ed=e.distance;ex=e.x;ey=e.y;eang=Math.atan2(e.y-tank.y,e.x-tank.x)*180/Math.PI;}}}
  var bd=1e9,bvx=0,bvy=0; if(bulletInfo.length){var b=bulletInfo[0]; bd=b.distance; bvx=b.vx; bvy=b.vy; for(var i=1;i<bulletInfo.length;i++){var t=bulletInfo[i]; if(t.distance<bd){bd=t.distance;bvx=t.vx;bvy=t.vy;}}}
  var ax=0,ay=0,ad=1e9; if(allies.length){var a=allies[0]; ad=a.distance; ax=a.x; ay=a.y; for(var i=1;i<allies.length;i++){var t=allies[i]; if(t.distance<ad){ad=t.distance; ax=t.x; ay=t.y;}}}
  var feat=[tank.x/900,tank.y/600,clamp(tank.health/100,0,1),clamp(tank.energy/150,0,1),clamp(ed/900,0,1),Math.sin(eang*Math.PI/180),Math.cos(eang*Math.PI/180),clamp(ad/900,0,1),clamp(bd/900,0,1),clamp(bvx/10,-1,1),clamp(bvy/10,-1,1),0.05];
  var o=nn(feat); var fire=((o[1])%1)*360; if(fire<0)fire+=360; var toward = Math.atan2(ey-tank.y,ex-tank.x)*180/Math.PI; var awayBul = Math.atan2(tank.y-(tank.y+bvy*5), tank.x-(tank.x+bvx*5))*180/Math.PI; var moveDir = 0.5*toward + 0.5*awayBul; if(!tank.move(moveDir)) tank.move(toward+180); if(Math.tanh(o[2])>-0.3 || ed<400) tank.fire(fire);
}

// ===== 다음 로봇 =====

function name() { return "Delta Tanker"; }
function type() { return Type.TANKER; }
function update(tank, enemies, allies, bulletInfo) {
  function clamp(x,a,b){return Math.max(a,Math.min(b,x));}
  function nn(x){
    var W1=[[0.8,0.5,0.4,0.3,0.2,0.1,-0.1,0.6,0.7,-0.2,0.3,0.4],[0.7,0.6,0.5,0.4,0.3,0.2,0.1,0.8,0.7,0.6,-0.5,0.4],[0.6,0.7,0.8,0.5,0.4,0.3,0.2,0.1,0.9,-0.4,0.5,0.6],[0.5,0.4,0.3,0.8,0.7,0.6,0.1,0.2,0.3,0.4,0.5,0.6],[0.4,0.3,0.2,0.1,0.8,0.7,0.6,0.5,0.4,0.3,0.2,0.1],[0.3,0.2,0.1,0.4,0.5,0.6,0.7,0.8,0.2,0.3,0.4,0.5],[0.2,0.1,0.4,0.5,0.6,0.7,0.8,0.9,0.5,0.4,0.3,0.2],[0.1,0.4,0.5,0.6,0.7,0.8,0.9,0.2,0.1,0.2,0.3,0.4]]; var b1=[0.1,0.1,0.1,0.05,0.05,0.1,0.1,0.05];
    var W2=[[0.9,0.8,0.7,0.6,0.5,0.4,0.3,0.2],[-0.3,0.2,0.6,0.8,0.5,0.4,0.3,0.1],[0.4,0.5,0.6,0.7,0.8,0.3,0.2,0.1]]; var b2=[0,0,0];
    var h=new Array(8),o=new Array(3); for(var i=0;i<8;i++){var s=b1[i]; for(var j=0;j<12;j++) s+=W1[i][j]*x[j]; h[i]=Math.max(0,s);} for(var k=0;k<3;k++){var s2=b2[k]; for(var i2=0;i2<8;i2++) s2+=W2[k][i2]*h[i2]; o[k]=s2;} return o;
  }
  var ex=0,ey=0,ed=1e9,eang=0; if(enemies.length){var ne=enemies[0];ed=ne.distance;ex=ne.x;ey=ne.y;eang=ne.angle; for(var i=1;i<enemies.length;i++){var e=enemies[i]; if(e.distance<ed){ed=e.distance; ex=e.x; ey=e.y; eang=Math.atan2(e.y-tank.y,e.x-tank.x)*180/Math.PI;}}}
  var feat=[tank.x/900,tank.y/600,clamp(tank.health/180,0,1),clamp(tank.energy/220,0,1),clamp(ed/900,0,1),Math.sin(eang*Math.PI/180),Math.cos(eang*Math.PI/180), allies.length/6, enemies.length/6, Math.random()*0.1, 0.0, 0.0];
  var o=nn(feat); var toward = Math.atan2(ey-tank.y,ex-tank.x)*180/Math.PI; var moveDir = 0.7*toward + 0.3*((o[0]%1)*360); if(!tank.move(moveDir)) tank.move(toward);
  var fireDir = ((o[1])%1)*360; if(fireDir<0) fireDir+=360; tank.fire(fireDir);
}

// ===== 다음 로봇 =====

function name() { return "Echo Dealer"; }
function type() { return Type.DEALER; }
function update(tank, enemies, allies, bulletInfo) {
  function clamp(x,a,b){return Math.max(a,Math.min(b,x));}
  function nn(x){
    var W1=[[0.6,-0.2,0.5,0.7,0.1,0.3,0.2,0.8,0.4,0.1,0.2,0.3],[0.5,0.2,0.6,0.8,0.3,0.4,0.1,0.7,0.2,0.5,0.6,0.7],[0.4,0.3,0.7,0.6,0.2,0.5,0.8,0.1,0.3,0.4,0.5,0.6],[0.3,0.4,0.5,0.6,0.7,0.8,0.2,0.1,0.4,0.5,0.6,0.7],[0.2,0.5,0.6,0.7,0.8,0.1,0.3,0.4,0.5,0.6,0.7,0.8],[0.1,0.6,0.7,0.8,0.5,0.4,0.3,0.2,0.5,0.6,0.7,0.8],[0.7,0.8,0.6,0.5,0.4,0.3,0.2,0.1,0.3,0.4,0.5,0.6],[0.8,0.7,0.5,0.4,0.3,0.2,0.1,0.6,0.2,0.3,0.4,0.5]]; var b1=[0,0,0,0,0,0,0,0];
    var W2=[[0.3,0.4,0.5,0.6,0.7,0.2,0.1,0.3],[0.6,0.5,0.4,0.3,0.2,0.7,0.8,0.6],[0.5,0.6,0.7,0.4,0.3,0.2,0.1,0.5]]; var b2=[0,0,0];
    var h=new Array(8),o=new Array(3); for(var i=0;i<8;i++){var s=b1[i]; for(var j=0;j<12;j++) s+=W1[i][j]*x[j]; h[i]=Math.max(0,s);} for(var k=0;k<3;k++){var s2=b2[k]; for(var i2=0;i2<8;i2++) s2+=W2[k][i2]*h[i2]; o[k]=s2;} return o;
  }
  var ex=0,ey=0,ed=1e9,eang=0; if(enemies.length){var ne=enemies[0]; ed=ne.distance; ex=ne.x; ey=ne.y; eang=ne.angle; for(var i=1;i<enemies.length;i++){var e=enemies[i]; if(e.distance<ed){ed=e.distance; ex=e.x; ey=e.y; eang=Math.atan2(e.y-tank.y,e.x-tank.x)*180/Math.PI;}}}
  var bd=1e9,bvx=0,bvy=0; if(bulletInfo.length){var b=bulletInfo[0]; bd=b.distance; bvx=b.vx; bvy=b.vy; for(var i=1;i<bulletInfo.length;i++){var t=bulletInfo[i]; if(t.distance<bd){bd=t.distance; bvx=t.vx; bvy=t.vy;}}}
  var feat=[tank.x/900,tank.y/600,clamp(tank.health/100,0,1),clamp(tank.energy/150,0,1),clamp(ed/900,0,1),Math.sin(eang*Math.PI/180),Math.cos(eang*Math.PI/180),clamp(bd/900,0,1),clamp(bvx/12,-1,1),clamp(bvy/12,-1,1),enemies.length/6,allies.length/6];
  var o=nn(feat); var flank = (Math.atan2(ey-tank.y,ex-tank.x)*180/Math.PI)+90; var moveDir = 0.5*flank + 0.5*((o[0]%1)*360); if(!tank.move(moveDir)) tank.move(flank+180);
  var fireDir=((o[1])%1)*360; if(Math.tanh(o[2])>-0.4 || ed<380) tank.fire(fireDir);
}

// ===== 다음 로봇 =====

function name() { return "Foxtrot Normal"; }
function type() { return Type.NORMAL; }
function update(tank, enemies, allies, bulletInfo) {
  function clamp(x,a,b){return Math.max(a,Math.min(b,x));}
  function nn(x){
    var W1=[[0.5,0.2,0.3,0.4,0.1,0.6,0.7,0.8,0.2,0.1,0.3,0.4],[0.6,0.3,0.4,0.5,0.2,0.7,0.8,0.1,0.3,0.2,0.4,0.5],[0.7,0.4,0.5,0.6,0.3,0.8,0.1,0.2,0.4,0.3,0.5,0.6],[0.8,0.5,0.6,0.7,0.4,0.1,0.2,0.3,0.5,0.4,0.6,0.7],[0.4,0.6,0.7,0.8,0.5,0.2,0.3,0.4,0.6,0.5,0.7,0.8],[0.3,0.5,0.6,0.7,0.8,0.4,0.2,0.1,0.5,0.6,0.7,0.8],[0.2,0.6,0.7,0.8,0.5,0.3,0.4,0.2,0.6,0.7,0.8,0.5],[0.1,0.7,0.8,0.5,0.6,0.4,0.3,0.2,0.7,0.8,0.5,0.6]]; var b1=[0,0,0,0,0,0,0,0];
    var W2=[[0.6,0.5,0.4,0.3,0.2,0.7,0.8,0.6],[0.5,0.6,0.7,0.4,0.3,0.2,0.1,0.5],[0.4,0.3,0.2,0.1,0.6,0.5,0.7,0.8]]; var b2=[0,0,0];
    var h=new Array(8),o=new Array(3); for(var i=0;i<8;i++){var s=b1[i]; for(var j=0;j<12;j++) s+=W1[i][j]*x[j]; h[i]=Math.max(0,s);} for(var k=0;k<3;k++){var s2=b2[k]; for(var i2=0;i2<8;i2++) s2+=W2[k][i2]*h[i2]; o[k]=s2;} return o;
  }
  var ex=0,ey=0,ed=1e9,eang=0; if(enemies.length){var ne=enemies[0]; ed=ne.distance; ex=ne.x; ey=ne.y; eang=ne.angle; for(var i=1;i<enemies.length;i++){var e=enemies[i]; if(e.distance<ed){ed=e.distance; ex=e.x; ey=e.y; eang=Math.atan2(e.y-tank.y,e.x-tank.x)*180/Math.PI;}}}
  var feat=[tank.x/900,tank.y/600,clamp(tank.health/120,0,1),clamp(tank.energy/160,0,1),clamp(ed/900,0,1),Math.sin(eang*Math.PI/180),Math.cos(eang*Math.PI/180), allies.length/6, enemies.length/6, 0, 0, 0.1];
  var o=nn(feat); var spread=((o[0])%1)*360; if(!tank.move(spread)) tank.move(spread+90);
  var aim = Math.atan2(ey-tank.y,ex-tank.x)*180/Math.PI; var fireDir = 0.6*aim + 0.4*(((o[1])%1)*360); tank.fire(fireDir);
}
